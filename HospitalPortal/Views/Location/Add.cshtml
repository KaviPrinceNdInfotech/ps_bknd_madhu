@model HospitalPortal.Models.ViewModels.LocationDTO
@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";

}

<style>
    #mainContainer
    {
        width:60%;
        margin-top:1%;
        margin-left:1%;
    }
</style>

@using (Html.BeginForm())
{
<div id="mainContainer">

    <div class="row">
       <div class="col-md-6">
          @Html.ActionLink("Show All", "All", null, new { @class = "btn btn-info" })
       </div>
    </div>

    <div class="row">
        <div class="col-md-6">
            <h3>Add Location</h3>
        </div>
    </div>

       @*@Html.HiddenFor(a => a.Id)
       @Html.HiddenFor(a=>a.IsDeleted)*@
     @if (TempData["msg"] != null)
     {
         if (TempData["msg"].ToString() == "ok")
         {
         <div class="alert alert-success">Saved sucsessfully</div>
         }
         else
         {
        <div class="alert alert-error">@TempData["msg"]</div>

         }
     }


    <div class="row">

        <div class="form-group">
            State * @Html.DropDownList("State", Model.States, "Select", new { @class = "form-control" })
            <span class="red">
            </span>
        </div>

        <div class="form-group">
            District * @Html.DropDownListFor(a => a.City_Id, Enumerable.Empty<SelectListItem>(), "Select", new { @class = "form-control" })
            <span class="red">
                @Html.ValidationMessageFor(a => a.City_Id)
            </span>
        </div>
            <div class="form-group">
              Address * @Html.TextBoxFor(a => a.LocationName, new { @class = "form-control" })
                @*<input type="hidden" name="lat" id="lat"/>
                <input type="hidden" name="lng" id="lng"/>*@
             <span class="red">
                 @Html.ValidationMessageFor(a => a.LocationName)
             </span>
            </div>
            <div class="form-group">
               <input type="submit" value="Save" class="btn btn-info" />
            </div>
        </div>
    </div>
}


<script src="/js/jquery-1.11.1.min.js"></script>
<script>
    $("#State").change(function () {
        var stateId = $(this).val();
        if (stateId.length < 1)
            return;
        let dd = $("#City_Id");
        window.aa = dd;
        dd.empty();
        dd.append('<option val="">Select City</option>');
        $.get('/Common/GetCitiesByState?stateId=' + stateId)
            .done(function (response) {
                for (let i = 0; i < response.length; i++) {
                    dd.append('<option value=' + parseInt(response[i].Id) + '>' + response[i].CityName + '</option>');
                }
        }).fail(function (err) {
            console.log(err.responseText);
        });
      
    })
</script>
<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBuEl3Iwlbux-tYXVE4gbNBjaQzoCfHldg&libraries=places"></script>
@*<script>
    google.maps.event.addDomListener(window, 'load', initialize);
    function initialize() {
        var input = document.getElementById('LocationName');

        var autocomplete = new google.maps.places.Autocomplete(document.getElementById('LocationName'));

        google.maps.event.addListener(autocomplete, 'place_changed', function () {
            codeAddress();
        });

        function codeAddress() {
            debugger
            var address = document.getElementById("LocationName").value;
            var geocoder = new google.maps.Geocoder();
            geocoder.geocode({ 'address': address }, function (results, status) {
                var location = results[0].geometry.location;
                $("#lat").val(location.lat());
                $("#lng").val(location.lng());
            });
        }
        google.maps.event.addDomListener(window, 'load', codeAddress);
    };
</script>*@
