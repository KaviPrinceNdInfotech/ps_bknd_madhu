@model HospitalPortal.Models.ViewModels.DoctorDTO
@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<style>
    #mainContainer {
        width: 60%;
        margin-top: 1%;
        margin-left: 1%;
    }
</style>

@using (Html.BeginForm("Edit", "DoctorRegistration", FormMethod.Post, new { @encType = "multipart/form-data" }))
{
    <div id="mainContainer">
   

        <div class="row">
            <div class="col-md-6">
                <h3>Update Profile</h3>
            </div>
        </div>
        @Html.HiddenFor(a => a.Id)
        @Html.HiddenFor(a=>a.IsDeleted)
        @Html.HiddenFor(a => a.AdminLogin_Id)
        @Html.HiddenFor(a => a.AadharImageName)
        @*@Html.HiddenFor(a => a.AadharImage2)*@
        @Html.HiddenFor(a => a.LicenceImage)
        @Html.HiddenFor(a => a.IsApproved)
        @Html.HiddenFor(a => a.EmailId)
        @Html.HiddenFor(a => a.MobileNumber)
        @Html.HiddenFor(a => a.Password)
        @Html.HiddenFor(a=>a.Vendor_Id)
        @Html.HiddenFor(a=>a.Department_Id)
        @Html.HiddenFor(a=>a.PinCode)
        @Html.HiddenFor(a => a.IsCheckedTermsCondition)
        @Html.Partial("~/Views/Shared/_DisplayMessageUpdate.cshtml")


        <div class="row">
            <div class="col-md-12">
                <div class="form-group">
                    Name * @Html.TextBoxFor(a => a.DoctorName, new { @class = "form-control" })
                    <span class="red">
                        @Html.ValidationMessageFor(a => a.DoctorName)
                    </span>
                </div>

                <div class="form-group">
                    Clinic Name * @Html.TextBoxFor(a => a.ClinicName, new { @class = "form-control" })
                    <span class="red">
                        @Html.ValidationMessageFor(a => a.ClinicName)
                    </span>
                </div>

                <div class="form-group">
                    Department * @Html.DropDownListFor(a => a.Department_Id, Model.DepartmentList, "Select", new { @class = "form-control" })
                    <span class="red">
                        @Html.ValidationMessageFor(a => a.Department_Id)
                    </span>
                </div>

                <div class="form-group">
                    Specialist * @Html.DropDownListFor(a => a.Specialist_Id,
                        Model.SpecialistList
                        , "Select", new { @class = "form-control" })
                    <span class="red">
                        @Html.ValidationMessageFor(a => a.Specialist_Id)
                    </span>
                </div>

                @*<div class="form-group">
                    Mobile Number * @Html.TextBoxFor(a => a.MobileNumber, new { @class = "form-control" })
                    <span class="red">
                        @Html.ValidationMessageFor(a => a.MobileNumber)
                    </span>
                </div>*@

                <div class="form-group">
                    Phone Number  @Html.TextBoxFor(a => a.PhoneNumber, new { @class = "form-control" })
                    <span class="red">
                        @Html.ValidationMessageFor(a => a.PhoneNumber)
                    </span>
                </div>

                @*<div class="form-group">
                    Email Id *  @Html.TextBoxFor(a => a.EmailId, new { @class = "form-control" })
                    <span class="red">
                        @Html.ValidationMessageFor(a => a.EmailId)
                    </span>
                </div>*@

                @*<div class="form-group">
        Password * @Html.PasswordFor(a => a.Password, new { @class = "form-control" })
        <span class="red">
            @Html.ValidationMessageFor(a => a.Password)
        </span>
    </div>

    <div class="form-group">
        Confirm Your Password * @Html.PasswordFor(a => a.ConfirmPassword, new { @class = "form-control" })
        <span class="red">
            @Html.ValidationMessageFor(a => a.ConfirmPassword)
        </span>
    </div>*@

                <div class="form-group">
                    State * @Html.DropDownListFor(a => a.StateMaster_Id, Model.States, "Select", new { @class = "form-control" })
                    <span class="red">
                        @Html.ValidationMessageFor(a => a.StateMaster_Id)
                    </span>
                </div>

                <div class="form-group">
                    City * @Html.DropDownListFor(a => a.CityMaster_Id,
                        Model.Cities
                        , "Select", new { @class = "form-control" })
                    <span class="red">
                        @Html.ValidationMessageFor(a => a.CityMaster_Id)
                    </span>
                </div>

                <div class="form-group">
                    Address * @Html.TextAreaFor(a => a.Location, new { @class = "form-control" })
                    <span class="red">
                        @Html.ValidationMessageFor(a => a.Location)
                    </span>
                </div>

                <div class="form-group">
                    @{ Html.EnableClientValidation(false); }
                    @if(!string.IsNullOrEmpty(Model.LicenceImage))
                    {
                        <img src="/Images/@Model.LicenceImage" class="thumb" />
                    }
                    Licence Doc. * @Html.TextBoxFor(a => a.LicenceImageFile, new { @class = "form-control", type = "file" })
                    <span class="red">
                        @Html.ValidationMessageFor(a => a.LicenceImageFile)
                    </span>
                    @{ Html.EnableClientValidation(true); }
                </div>

                <div class="form-group">
                    Licence Number * @Html.TextBoxFor(a => a.LicenceNumber, new { @class = "form-control" })
                    <span class="red">
                        @Html.ValidationMessageFor(a => a.LicenceNumber)
                    </span>
                </div>
                <div class="form-group">
                    Licence Validity * @Html.TextBoxFor(a => a.LicenseValidity, new { @class = "form-control datepicker" })
                    <span class="red">
                        @Html.ValidationMessageFor(a => a.LicenceNumber)
                    </span>
                </div>

                @*<div class="form-group">
                    PAN Number * @Html.TextBoxFor(a => a.PAN, new { @class = "form-control" })
                    <span class="red">
                        @Html.ValidationMessageFor(a => a.PAN)
                    </span>
                </div>*@

                @*<div class="form-group">
                    Aadhar Number * @Html.TextBoxFor(a => a.AadharNumber, new { @class = "form-control" })
                    <span class="red">
                        @Html.ValidationMessageFor(a => a.AadharNumber)
                    </span>
                </div>*@

                <div class="form-group">
                    @{ Html.EnableClientValidation(false); }
                   @*@if (string.IsNullOrEmpty(Model.PanImage))
                   {
                    <a href="/Images/@Model.AadharImage">
                        <img src="/Images/@Model.AadharImage" class="thumb" />
                    </a>
                                            <a href="/Images/@Model.AadharImage2">
                                                <img src="/Images/@Model.AadharImage2" class="thumb" />
                                            </a>
                   }*@
                    @*@if (string.IsNullOrEmpty(Model.AadharImage) && string.IsNullOrEmpty(Model.AadharImage2))
                    {
                        <a href="/Images/@Model.PanImage">
                            <img src="/Images/@Model.PanImage" class="thumb" />
                        </a>
                    }*@
                    <div class="form-group">
                        Kindaly Check
                        <input type="radio" name="image1" value="Aadhar" id="Image1">Aadhar Image
                        <input type="radio" name="image1" value="Pan" id="Image2">Pan Image
                    </div>
                    
                    <div class="form-group" id="AadharimageDiv" style="display:none">
                        @*<div class="form-group">
                            Aadhar Image 1*  @Html.TextBoxFor(a => a.AadharImageFile, new { @class = "form-control", type = "file" })
                            <span class="red">
                                @Html.ValidationMessageFor(a => a.AadharImageFile)
                            </span>
                        </div>*@
                        @*<div class="form-group">
                            Aadhar Image 2*  @Html.TextBoxFor(a => a.AadharImageFile2, new { @class = "form-control", type = "file" })
                            <span class="red">
                                @Html.ValidationMessageFor(a => a.AadharImageFile2)
                            </span>
                        </div>*@
                    </div>

                    @*<div class="form-group" id="PanimageDiv" style="display:none">
                        <div class="form-group">
                            Pan Image*  @Html.TextBoxFor(a => a.PanImageFile, new { @class = "form-control", type = "file" })
                            <span class="red">
                                @Html.ValidationMessageFor(a => a.PanImageFile)
                            </span>
                        </div>
                    </div>*@
                    @{ Html.EnableClientValidation(true); }
                </div>
                <div class="form-group">
                    <div class="row">
                        <div class="col-md-5">
                            Start Time *  @Html.TextBoxFor(a => a.StartTime, new { @class = "form-control", type = "time", required = "required" })
                            <span class="red">
                                @Html.ValidationMessageFor(a => a.StartTime)
                            </span>
                        </div>
                        <div class="col-md-2" style="margin-top:5%;"><b>To </b></div>

                        <div class="col-md-5">
                            End Time  *  @Html.TextBoxFor(a => a.EndTime, new { @class = "form-control", type = "time", required = "required" })
                            <span class="red">
                                @Html.ValidationMessageFor(a => a.EndTime)
                            </span>
                        </div>
                    </div>

                </div>
                <div class="form-group">
                    Slot Timing *  @Html.DropDownListFor(a => a.SlotTiming, new List<SelectListItem>() { new SelectListItem() { Text = "10", Value = "10" }, new SelectListItem() { Text="15", Value="15" },
                                  new SelectListItem() { Text="20", Value="20" },new SelectListItem() { Text="25", Value="25" },new SelectListItem() { Text="30", Value="30" }
                              }, "Select Slot Timing", new { @class = "form-control", required = "required" })
                    <span class="red">
                        @Html.ValidationMessageFor(a => a.SlotTiming)
                    </span>
                </div>
                @*<div class="form-group">
                    Fee * @Html.TextBoxFor(a => a.Fee, new { @class = "form-control" })
                    <span class="red">
                        @Html.ValidationMessageFor(a => a.PAN)
                    </span>
                </div>*@
                <div class="form-group">
                    <input type="submit" value="Save" class="btn btn-info" />
                </div>
            </div>
        </div>
    </div>
}


<script src="/Scripts/Library/jquery-1.7.1.min.js"></script>
<link href="~/css/jquery-ui.css" rel="stylesheet" />
<script src="~/Scripts/jquery-ui.js"></script>
<script src="/Scripts/Library/jquery-ui-1.8.20.min.js"></script>

<script>
    $(".datepicker").datepicker().datepicker('setdate', 'today');
</script>
<script>
    //$("#StateMaster_Id").change(function () {
    //    var stateId = $(this).val();
    //    var city = $("#CityMaster_Id");
    //    city.empty();
    //    city.append("<option value=''>Select</option>");
    //    $.ajax({
    //        url: '/Common/GetCitiesByState?stateId='+stateId,
    //        type: 'get',
    //        success: function (response) {
    //            $.each(response, function (key,val) {
    //                city.append("<option value='"+val.Id+"'>"+val.CityName+"</option>");
    //            });
    //        },
    //        error: function (error) {
    //            console.log(error.responseText);
    //        }
    //    });
    //});

    $("#Department_Id").change(function () {
        let depId = $(this).val();
        var childDd = $("#Specialist_Id");
        childDd.empty();
        childDd.append('<option value="">Select</option>')
        $.get('/Common/GetSpecialistByDept?depId=' + depId).then(function (response) {
            $.each(response, function (key, val) {
                childDd.append(`<option value="${val.Id}">${val.SpecialistName}</option>`);
            });
        }).error(function (response) {
            console.log(response.responseText);
        });
    });


    $('input:radio[id="Image1"]').change(function () {
        if ($(this).val() == 'Aadhar') {
            $("#PanimageDiv").css("display", "none");
            $("#AadharimageDiv").toggle();
        }
    });

    $('input:radio[id="Image2"]').change(function () {
        if ($(this).val() == 'Pan') {
            $("#AadharimageDiv").css("display", "none");
            $("#PanimageDiv").toggle();
        }
    });
</script>



@Html.Partial("~/Views/Shared/_StateCityLocCascading.cshtml")

@if (Model.IsApproved == false)
{
    <script src="~/Scripts/EditAlert.js"></script>
}