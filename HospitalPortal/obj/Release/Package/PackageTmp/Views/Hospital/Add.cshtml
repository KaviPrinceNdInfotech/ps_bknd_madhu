@model HospitalPortal.Models.ViewModels.HospitalDTO
@{
    if (User.Identity.IsAuthenticated)
    {
        Layout = "~/Views/Shared/_AdminLayout.cshtml";
    }
    else
    {
        Layout = "~/Views/Shared/_SignUp.cshtml";
    }

}

<style>
    #mainContainer {
        width: 60%;
        margin-left: 1%;
        margin-top: 1%;
    }
</style>

@using (Html.BeginForm("Add", "Hospital", FormMethod.Post, new { @encType = "multipart/form-data" }))
{
    <div id="mainContainer">

        @*<div class="row">
               <div class="col-md-6">
                  @Html.ActionLink("Show All", "All", null, new { @class="btn btn-info"})
               </div>
            </div>*@

        <div class="row">
            <div class="col-md-6">
                <h3>Register Hospital</h3>
            </div>
        </div>

        @*@Html.HiddenFor(a => a.Id)
            @Html.HiddenFor(a=>a.IsDeleted)
            @Html.HiddenFor(a=>a.AdminLogin_Id)
        *@
        @Html.Partial("~/Views/Shared/_DisplayMessage.cshtml")



        <div class="row">
            <div class="col-md-12">
                <div class="form-group">
                    Hospital Name * @Html.TextBoxFor(a => a.HospitalName, new { @class = "form-control" })
                    <span class="red">
                        @Html.ValidationMessageFor(a => a.HospitalName)
                    </span>
                </div>

                <div class="form-group">
                    Landline Number  @Html.TextBoxFor(a => a.PhoneNumber, new { @class = "form-control" })
                    <span class="red">
                        @Html.ValidationMessageFor(a => a.PhoneNumber)
                    </span>
                </div>

                <div class="form-group">
                    Mobile Number * @Html.TextBoxFor(a => a.MobileNumber, new { @class = "form-control" })
                    <span class="red">
                        @Html.ValidationMessageFor(a => a.MobileNumber)
                    </span>
                </div>


                <div class="form-group">
                    Email Id *  @Html.TextBoxFor(a => a.EmailId, new { @class = "form-control" })
                    <span class="red">
                        @Html.ValidationMessageFor(a => a.EmailId)
                    </span>
                </div>

                <div class="form-group">
                    Password * @Html.PasswordFor(a => a.Password, new { @class = "form-control" })
                    <span class="red">
                        @Html.ValidationMessageFor(a => a.Password)
                    </span>
                </div>

                <div class="form-group">
                    Confirm Your Password * @Html.PasswordFor(a => a.ConfirmPassword, new { @class = "form-control" })
                    <span class="red">
                        @Html.ValidationMessageFor(a => a.ConfirmPassword)
                    </span>
                </div>

                <div class="form-group">
                    State *  @Html.DropDownListFor(a => a.StateMaster_Id, Model.States, "Select", new { @class = "form-control" })
                    <span class="red">
                        @Html.ValidationMessageFor(a => a.StateMaster_Id)
                    </span>


                </div>

                <div class="form-group">
                    @{ Html.EnableClientValidation(false);}
                    City * @Html.DropDownListFor(a => a.CityMaster_Id,
             Enumerable.Empty<SelectListItem>()
             , "Select", new { @class = "form-control" })
                    <span class="red">

                        @Html.ValidationMessageFor(a => a.CityMaster_Id)
                        @{ Html.EnableClientValidation(true);}


                    </span>
                </div>

                <div class="form-group">
                    Other City (If you are not able to find it above )
                    @Html.TextBoxFor(a => a.OtherCity, new { @class = "form-control" })
                    <span class="red">
                        @Html.ValidationMessageFor(a => a.OtherCity)
                    </span>
                </div>

                <div class="form-group">
                    @{ Html.EnableClientValidation(false);}
                    Location *  @Html.DropDownListFor(a => a.Location_Id,
 Enumerable.Empty<SelectListItem>()
 , "Select", new { @class = "form-control" })

                    <span class="red">
                        @Html.ValidationMessageFor(a => a.Location_Id)
                    </span>
                    @{ Html.EnableClientValidation(true);}
                </div>

                <div class="form-group">
                    Other Location (If you are not able to find it above )
                    @Html.TextBoxFor(a => a.OtherLocation, new { @class = "form-control" })
                    <span class="red">
                        @Html.ValidationMessageFor(a => a.OtherLocation)
                    </span>
                </div>

                <div class="form-group">
                    Address * @Html.TextAreaFor(a => a.Location, new { @class = "form-control" })
                    <span class="red">
                        @Html.ValidationMessageFor(a => a.Location)
                    </span>
                </div>

                <div class="form-group">
                    PinCode * @Html.TextBoxFor(a => a.PinCode, new { @class = "form-control" })
                    <span class="red">
                        @Html.ValidationMessageFor(a => a.PinCode)
                    </span>
                </div>

                <div class="form-group">
                    Franchise ID * @Html.TextBoxFor(a => a.refiId, new { @class = "form-control" })
                    <span class="red">
                        @Html.ValidationMessageFor(a => a.refiId)
                    </span>
                </div>
                <div class="form-group">
                    Registration Certificate * @Html.TextBoxFor(a => a.AuthorizationImageFile, new { @class = "form-control", type = "file" })
                    <span class="red">
                        @Html.ValidationMessageFor(a => a.AuthorizationImageFile)
                    </span>
                </div>
                @if (User.Identity.IsAuthenticated)
                {

                }
                else
                {
                    @Html.Partial("~/Views/Shared/_Terms&ConditionView.cshtml")
                }
                <div class="form-group">
                    <input type="submit" value="Save" class="btn btn-info" />
                </div>

            </div>
        </div>
    </div>
}
@if (!User.Identity.IsAuthenticated)
{
    <link rel="stylesheet" type="text/css" href="/lib/bootstrap/css/bootstrap.css">
    @Html.Partial("~/Views/Shared/_script.cshtml")
}

<script src="/Scripts/Library/jquery-1.7.1.min.js"></script>
@Html.Partial("~/Views/Shared/_StateCityLocCascading.cshtml")


<script type="text/javascript" src="http://maps.googleapis.com/maps/api/js?sensor=false&libraries=places"></script>
<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?libraries=places&key=AIzaSyAVJ6WcbMb96HxFwYJTgo3a00yxYj-ha80"></script>




@*<script type="text/javascript">
    google.maps.event.addDomListener(window, 'load', function () {
        var options = {
            types: ['(cities)'],
            componentRestrictions: { country: "in" }
        };
        var input = document.getElementById('Location');
        var places = new google.maps.places.Autocomplete(input, options);
    });
</script>*@