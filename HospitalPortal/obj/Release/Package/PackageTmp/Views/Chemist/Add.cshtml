@model HospitalPortal.Models.ViewModels.ChemistDTO
@{
    if (User.Identity.IsAuthenticated)
    {
        Layout = "~/Views/Shared/_AdminLayout.cshtml";
    }
    else
    {
        Layout = "~/Views/Shared/_SignUp.cshtml";
    }
}

<style>
    #mainContainer {
        width: 60%;
        margin-top: 1%;
        margin-left: 1%;
    }
</style>

@using (Html.BeginForm("Add", "Chemist", FormMethod.Post, new { @encType = "multipart/form-data" }))
{
    <div id="mainContainer">
        @Html.HiddenFor(a => a.Vendor_Id)
        @*<div class="row">
               <div class="col-md-6">
                  @Html.ActionLink("Show All", "All", null, new { @class="btn btn-info"})
               </div>
            </div>*@
        <div class="row">
            <div class="col-md-6">
                <h3>Chemist Registration</h3>
            </div>
        </div>
        @*@Html.HiddenFor(a => a.Id)
            @Html.HiddenFor(a=>a.IsDeleted)
            @Html.HiddenFor(a=>a.AdminLogin_Id)
        *@
        @Html.Partial("~/Views/Shared/_DisplayMessage.cshtml")
        <div class="row">
            <div class="col-md-12">
                <div class="form-group">
                    Chemist Name * @Html.TextBoxFor(a => a.ChemistName, new { @class = "form-control" })
                    <span class="red">
                        @Html.ValidationMessageFor(a => a.ChemistName)
                    </span>
                </div>

                <div class="form-group">
                    Shop Name * @Html.TextBoxFor(a => a.ShopName, new { @class = "form-control" })
                    <span class="red">
                        @Html.ValidationMessageFor(a => a.ShopName)
                    </span>
                </div>

                <div class="form-group">
                    Mobile Number * @Html.TextBoxFor(a => a.MobileNumber, new { @class = "form-control" })
                    <span class="red">
                        @Html.ValidationMessageFor(a => a.MobileNumber)
                    </span>
                </div>

                <div class="form-group">
                    Email Id *  @Html.TextBoxFor(a => a.EmailId, new { @class = "form-control" })
                    <span class="red">
                        @Html.ValidationMessageFor(a => a.EmailId)
                    </span>
                </div>

                <div class="form-group">
                    Password * @Html.PasswordFor(a => a.Password, new { @class = "form-control" })
                    <span class="red">
                        @Html.ValidationMessageFor(a => a.Password)
                    </span>
                </div>

                <div class="form-group">
                    Confirm Your Password * @Html.PasswordFor(a => a.ConfirmPassword, new { @class = "form-control" })
                    <span class="red">
                        @Html.ValidationMessageFor(a => a.ConfirmPassword)
                    </span>
                </div>

                <div class="form-group">
                    State * @Html.DropDownListFor(a => a.StateMaster_Id, Model.States, "Select", new { @class = "form-control" })
                    <span class="red">
                        @Html.ValidationMessageFor(a => a.StateMaster_Id)
                    </span>
                </div>

                <div class="form-group">
                    @{ Html.EnableClientValidation(false);}
                    City  @Html.DropDownListFor(a => a.CityMaster_Id,
          Enumerable.Empty<SelectListItem>()
          , "Select", new { @class = "form-control" })
                    <span class="red">

                        @Html.ValidationMessageFor(a => a.CityMaster_Id)
                        @{ Html.EnableClientValidation(true);}


                    </span>
                </div>


                @*<div class="form-group">
            @{ Html.EnableClientValidation(false);}
            City  @Html.DropDownListFor(a => a.CityMaster_Id,
                    Enumerable.Empty<SelectListItem>()
                    , "Select", new { @class = "form-control" })
            <span class="red">

                @Html.ValidationMessageFor(a => a.CityMaster_Id)
                @{ Html.EnableClientValidation(true);}


            </span>
        </div>*@

                <div class="form-group">
                    Other City (If you are not able to find it above )
                    @Html.TextBoxFor(a => a.OtherCity, new { @class = "form-control" })
                    <span class="red">
                        @Html.ValidationMessageFor(a => a.OtherCity)
                    </span>
                </div>
                @*<div class="form-group">
            If City Not Available. Please (✓)
            @Html.CheckBoxFor(a => a.IsCityAvailable)
        </div>
        <div class="form-group" id="CityNamesdiv" style="display:none">
            New City Name:
            @Html.TextBoxFor(a => a.CityNames, new { @class = "form-control" })
        </div>*@
                <div class="form-group">
                    @{ Html.EnableClientValidation(false);}
                    Location * : @Html.DropDownListFor(a => a.Location_Id,
Enumerable.Empty<SelectListItem>()
, "Select", new { @class = "form-control" })

                    <span class="red">
                        @Html.ValidationMessageFor(a => a.Location_Id)
                    </span>
                    @{ Html.EnableClientValidation(true);}
                </div>

                <div class="form-group">
                    Other Location (If you are not able to find it above )
                    @Html.TextBoxFor(a => a.OtherLocation, new { @class = "form-control" })
                    <span class="red">
                        @Html.ValidationMessageFor(a => a.OtherLocation)
                    </span>
                </div>
                @*<div class="form-group">
            If Location Not Available. Please (✓)
            @Html.CheckBoxFor(a => a.IsLocationAvail)
        </div>
        <div class="form-group" id="LocNamesdiv" style="display:none">
            New Location Name:
            @Html.TextBoxFor(a => a.LocationName, new { @class = "form-control" })
        </div>*@
                <div class="form-group">
                    Address * @Html.TextAreaFor(a => a.Location, new { @class = "form-control" })
                    <span class="red">
                        @Html.ValidationMessageFor(a => a.Location)
                    </span>
                </div>
                <div class="form-group">
                    PinCode * @Html.TextBoxFor(a => a.PinCode, new { @class = "form-control" })
                    <span class="red">
                        @Html.ValidationMessageFor(a => a.PinCode)
                    </span>
                </div>

                <div class="form-group">
                    Franchise ID * @Html.TextBoxFor(a => a.RefId, new { @class = "form-control" })
                    <span class="red">
                        @Html.ValidationMessageFor(a => a.RefId)
                    </span>
                </div>
                @*<div class="form-group">
            PAN Number * @Html.TextBoxFor(a => a.PAN, new { @class = "form-control" })
            <span class="red">
                @Html.ValidationMessageFor(a => a.PAN)
            </span>
        </div>*@
                @*<div class="form-group">
            PAN Image: @Html.TextBoxFor(a => a.PanImageFile, new { @class = "form-control", type = "file" })
            <span class="red">
                @Html.ValidationMessageFor(a => a.PanImageFile)
            </span>
        </div>*@

                @*<div class="form-group">
            Aadhar Number @Html.TextBoxFor(a => a.AadharOrPANNumber, new { @class = "form-control" })
            <span class="red">
                @Html.ValidationMessageFor(a => a.AadharOrPANNumber)
            </span>
        </div>

        <div class="form-group">
            Aadhar doc. @Html.TextBoxFor(a => a.AadharOrImageFile, new { @class = "form-control", type = "file" })
            <span class="red">
                @Html.ValidationMessageFor(a => a.AadharOrImageFile)
            </span>
        </div>*@
                <div class="form-group">
                    <span>GST Number<em class="text-danger">*</em> </span> @Html.TextBoxFor(a => a.GSTNumber, new { @class = "form-control", @required = "require" })
                    <span class="red">
                        @Html.ValidationMessageFor(a => a.GSTNumber, "", new { @class = "text-danger" })
                    </span>
                </div>


                <div class="form-group">
                    Licence Image File * @Html.TextBoxFor(a => a.LicenceImageFile, new { @class = "form-control", type = "file" })
                    <span class="red">
                        @Html.ValidationMessageFor(a => a.LicenceImageFile)
                    </span>
                </div>

                <div class="form-group">
                    Licence Number * @Html.TextBoxFor(a => a.LicenceNumber, new { @class = "form-control" })
                    <span class="red">
                        @Html.ValidationMessageFor(a => a.LicenceNumber)
                    </span>
                </div>
                <div class="form-group">
                    Licence Validity * @Html.TextBoxFor(a => a.LicenseValidity, new { @class = "form-control dp" })
                    <span class="red">
                        @Html.ValidationMessageFor(a => a.LicenceNumber)
                    </span>
                </div>

                <div class="form-group">
                    Pan Number * @Html.TextBoxFor(a => a.PAN, new { @class = "form-control" })
                    <span class="red">
                        @Html.ValidationMessageFor(a => a.PAN)
                    </span>
                </div>
                @if (User.Identity.IsAuthenticated)
                {

                }
                else
                {
                    @Html.Partial("~/Views/Shared/_Terms&ConditionView.cshtml")
                }
                <div class="form-group">
                    <input type="submit" value="Save" class="btn btn-info" />
                </div>
            </div>
        </div>
    </div>
}

@if (!User.Identity.IsAuthenticated)
{
    <link rel="stylesheet" type="text/css" href="/lib/bootstrap/css/bootstrap.css">
    @Html.Partial("~/Views/Shared/_script.cshtml")
}
<script src="/Scripts/Library/jquery-1.7.1.min.js"></script>
<link href="~/css/jquery-ui.css" rel="stylesheet" />
<script src="~/Scripts/jquery-ui.js"></script>
<script>
    $(".datepicker").datepicker().datepicker('setdate', 'today');
</script>
<script>
    $("#IsCityAvailable").click(function () {
        //$("#Citydiv").css("display", "none");
        //$('#CityMaster_Id').empty();
        $("#CityNamesdiv").toggle();
    });
    $("#IsLocationAvail").click(function () {
        //$("#Locdiv").css("display", "none");
        //$('#Location_Id').empty();
        $("#LocNamesdiv").toggle();
    });

    $("#CityMaster_Id").change(function () {
        debugger
        var stateId = $(this).val();
        $.ajax({
            type: 'get',
            success: function (response) {
                if (stateId == null || stateId == "") {
                    $("#Citydiv").css("display", "none");
                    $("#CityNamesdiv").toggle();
                }
            },
            error: function (error) {
                console.log(error.responseText);
            }
        });
    });
</script>
<script src="/Scripts/Library/jquery-1.7.1.min.js"></script>
@Html.Partial("~/Views/Shared/_StateCityLocCascading.cshtml")



<script type="text/javascript" src="http://maps.googleapis.com/maps/api/js?sensor=false&libraries=places"></script>
<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?libraries=places&key=AIzaSyAVJ6WcbMb96HxFwYJTgo3a00yxYj-ha80"></script>




@*<script type="text/javascript">
    google.maps.event.addDomListener(window, 'load', function () {
        var options = {
            types: ['(cities)'],
            componentRestrictions: { country: "in" }
        };
        var input = document.getElementById('Location');
        var places = new google.maps.places.Autocomplete(input, options);
    });
</script>*@