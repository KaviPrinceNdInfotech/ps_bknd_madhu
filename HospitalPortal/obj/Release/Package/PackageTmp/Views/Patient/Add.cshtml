@model HospitalPortal.Models.ViewModels.PatientDTO
@{
    if (User.Identity.IsAuthenticated)
    {
        Layout = "~/Views/Shared/_AdminLayout.cshtml";
    }
    else
    {
        Layout = "~/Views/Shared/_SignUp.cshtml";
    }
}

<style>
    #mainContainer {
        width: 60%;
        margin-left:1%;
        margin-top:1%;
    }
</style>

@using (Html.BeginForm())
{
    @Html.HiddenFor(a => a.Rwa_Id)
    @Html.HiddenFor(a => a.vendorId)
    <div id="mainContainer">

        <div class="row">
            <div class="col-md-6">
                <h3> User Signup</h3>
            </div>
        </div>

        @if (TempData["msg"] != null)
        {
            <div class="row">
                <div class="col-md-12">
                    @if (TempData["msg"].ToString() == "ok")
                    {
                        <div class="alert alert-success">
                            You have registered successfully.
                        </div>
                    }
                    else
                    {
                        <div class="alert alert-danger">
                            @TempData["msg"]
                        </div>
                    }
                </div>
            </div>
        }

 

        <div class="row">
            <div class="col-md-12">
                <div class="form-group">
                    Patient Name * @Html.TextBoxFor(a => a.PatientName, new { @class = "form-control" })
                    <span class="red">
                        @Html.ValidationMessageFor(a => a.PatientName)
                    </span>
                </div>

                <div class="form-group">
                    Mobile Number * @Html.TextBoxFor(a => a.MobileNumber, new { @class = "form-control" })
                    <span class="red">
                        @Html.ValidationMessageFor(a => a.MobileNumber)
                    </span>
                </div>


                <div class="form-group">
                    Email Id * @Html.TextBoxFor(a => a.EmailId, new { @class = "form-control" })
                    <span class="red">
                        @Html.ValidationMessageFor(a => a.EmailId)
                    </span>
                </div>

                <div class="form-group">
                    Password * @Html.PasswordFor(a => a.Password, new { @class = "form-control" })
                    <span class="red">
                        @Html.ValidationMessageFor(a => a.Password)
                    </span>
                </div>

                <div class="form-group">
                    Confirm Your Password * @Html.PasswordFor(a => a.ConfirmPassword, new { @class = "form-control" })
                    <span class="red">
                        @Html.ValidationMessageFor(a => a.ConfirmPassword)
                    </span>
                </div>

                <div class="form-group">
                    State * @Html.DropDownListFor(a => a.StateMaster_Id, Model.States, "Select", new { @class = "form-control" })
                    <span class="red">
                        @Html.ValidationMessageFor(a => a.StateMaster_Id)
                    </span>
                </div>

                <div class="form-group">
                    City * @Html.DropDownListFor(a => a.CityMaster_Id,
                        Enumerable.Empty<SelectListItem>()
                        , "Select", new { @class = "form-control" })
                    <span class="red">
                        @Html.ValidationMessageFor(a => a.CityMaster_Id)
                    </span>
                </div>

                <div class="form-group">
                    Address * @Html.TextAreaFor(a => a.Location, new { @class = "form-control" })
                    <span class="red">
                        @Html.ValidationMessageFor(a => a.Location)
                    </span>
                </div>
                <div class="form-group">
                    Pin Code * @Html.TextBoxFor(a => a.PinCode, new { @class = "form-control" })
                    <span class="red">
                        @Html.ValidationMessageFor(a => a.PinCode)
                    </span>
                </div>

                @if (User.Identity.IsAuthenticated)
                {

                }
                else
                {
                    @Html.Partial("~/Views/Shared/_Terms&ConditionView.cshtml")
                }
                <div class="form-group">
                    <input type="submit" value="Save" class="btn btn-info" />
                </div>
            </div>
        </div>
    </div>
}



@if (!User.Identity.IsAuthenticated)
{
    <link rel="stylesheet" type="text/css" href="/lib/bootstrap/css/bootstrap.css">
    @Html.Partial("~/Views/Shared/_script.cshtml")
}
<script src="/Scripts/Library/jquery-1.7.1.min.js"></script>

<script>
    $("#StateMaster_Id").change(function () {
        var stateId = $(this).val();
        var city = $("#CityMaster_Id");
        city.empty();
        city.append("<option value=''>Select</option>");
        $.ajax({
            url: '/Common/GetCitiesByState?stateId='+stateId,
            type: 'get',
            success: function (response) {
                $.each(response, function (key,val) {
                    city.append("<option value='"+val.Id+"'>"+val.CityName+"</option>");
                });
            },
            error: function (error) {
                console.log(error.responseText);
            }
        });
    });
</script>